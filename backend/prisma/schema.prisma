// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String
  image     String?
  role      Role      @default(USER)
  agents    AIAgent[]
  chats     Chat[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model AIAgent {
  id          String    @id @default(cuid())
  name        String
  description String?
  config      Json
  isPublic    Boolean   @default(false)
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  chats       Chat[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

model Chat {
  id        String    @id @default(cuid())
  title     String?
  agentId   String
  userId    String
  agent     AIAgent   @relation(fields: [agentId], references: [id], onDelete: Cascade)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([agentId])
  @@index([userId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      Role     @default(USER)
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@index([chatId])
}

enum Role {
  USER
  ADMIN
  SYSTEM
  ASSISTANT
}
